import {
  getUnlimitedBalanceAndApprovalStateOverrides,
  LogVerbosity,
  TransactionTracer,
} from '@evm-transaction-trace/tracer'
import {
  type Address,
  createWalletClient,
  erc20Abi,
  type Hex,
  http,
  type PublicClient,
  publicActions,
} from 'viem'
import { privateKeyToAccount } from 'viem/accounts'
import { LBPairAbi } from './abi/LBPair'
import { LBRouterAbi } from './abi/LBRouterabi'
import { OBExecutorAbi } from './abi/obExecutorAbi'
import { RouterAbi } from './abi/routerabi'
import { getPublicClient, hyperEvm } from './client'
import { ETHERSCAN_API_KEY } from './config'
import { ERC20A, EXECUTOR, LBRouter, ROUTER } from './constants'

export const getWalletClient = (rpcUrl: string, privateKey: Hex) => {
  const account = privateKeyToAccount(privateKey)

  return createWalletClient({
    account,
    transport: http(rpcUrl),
    chain: hyperEvm,
  }).extend(publicActions)
}

const client = getPublicClient('https://rpc.berachain.com') as PublicClient

export const TOKEN = '0xFCBD14DC51f0A4d49d5E53C2E0950e0bC26d0Dce'
const _SENDER: Address = '0xc91E7af2E874A2e04183908AdD8b5c3bDb515CFC'

const tracer = new TransactionTracer(client, {
  cachePath: `./tx-cache-dir`,
  cacheOptions: {
    etherscanApiKey: ETHERSCAN_API_KEY,
    byAddress: {
      [ROUTER]: {
        name: 'OBRouter',
        abi: RouterAbi,
      },
      [LBRouter]: {
        name: 'LBRouter',
        abi: LBRouterAbi,
      },
      [EXECUTOR]: {
        name: 'OBExecutor',
        abi: OBExecutorAbi,
      },
      [ERC20A]: {
        name: 'ERC20',
        abi: erc20Abi,
      },
    },
    contractNames: {
      [ROUTER]: 'OBRouter',
    },
    extraAbis: [RouterAbi, LBPairAbi],
  },
  verbosity: LogVerbosity.Medium,
})

await tracer.init()

const [_error, trace] = await tracer.traceCall({
  account: _SENDER,
  blockNumber: 9451543n,
  to: ROUTER,
  data: '0xd46cadbc000000000000000000000000fcbd14dc51f0a4d49d5e53c2e0950e0bc26d0dce0000000000000000000000000000000000000000000000001bc16d674ec8000000000000000000000000000069696969696969696969696969696969696969690000000000000000000000000000000000000000000000000ce398a6ded21fb70000000000000000000000000000000000000000000000000cc299af71129528000000000000000000000000e1c73b54dde8df5eb6472160f3648305be0a282600000000000000000000000000000000000000000000000000000000000001200000000000000000000000008db25eb64830a30254a1c016e873df97bcee41380000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000017f69696969696969696969696969696969696969690100000000000000000000000000000000000000000000000000000ce398a6ded21fb70000000000000000000000000000000000000000000000000c86bb32a60333000000000000000000000000000000000000000000000000000c86cc1f64e2590001FCBD14DC51f0A4d49d5E53C2E0950e0bC26d0Dce01ffff019D4085e8B950F62d594bbBCac2AA0d5a0dC0e0E0008DB25Eb64830a30254a1c016E873Df97BcEE413801118D2cEeE9785eaf70C15Cd74CD84c9f8c3EeC9a01ffff012608B7c8Eb17e22CB95b7cD6f872993cf33a4CA1018DB25Eb64830a30254a1c016E873Df97BcEE413801D2C41BF4033A83C0FC3A7F58a392Bf37d6dCDb5801ffff17e5CAB105E2dC57bf0c27670D1aED543Dd526B68b8DB25Eb64830a30254a1c016E873Df97BcEE41380001ac03CABA51e17c86c921E1f6CBFBdC91F8BB2E6b01ffff0112bf773F18cEC56F14e7cb91d82984eF5A3148EE008DB25Eb64830a30254a1c016E873Df97BcEE413800',
  tracer: 'callTracer',
  chain: client.chain,
  tracerConfig: { withLog: true },
  stateOverride: getUnlimitedBalanceAndApprovalStateOverrides(_SENDER, TOKEN, ROUTER),
})

console.log(trace)

// const x = await w.sendTransaction({
//   to: ROUTER,
//   data: '0xd46cadbc000000000000000000000000ffaa4a3d97fe9107cef8a3f48c069f577ff76cc100000000000000000000000000000000000000000000000000043a4c774860000000000000000000000000005555555555555555555555555555555555555555000000000000000000000000000000000000000000000000000439ddaed0e49e000000000000000000000000000000000000000000000000000439c1fcb305c5000000000000000000000000c91e7af2e874a2e04183908add8b5c3bdb515cfc000000000000000000000000000000000000000000000000000000000000012000000000000000000000000007b93b6766a40df8c96440dc55708ca997229872000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000cd5555555555555555555555555555555555555555000000000000000000000000000000000000000000000000000000000439ddaed0e49e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001fFaa4a3D97fE9107Cef8a3F48c069F577Ff76cC101ffff1d5365b6ef09253c7abc0a9286ec578a9f4b413b7d0107B93B6766A40Df8C96440DC55708ca997229872555555555555555555555555555555555555555500000000000000000000000000000000000000',
// })

// console.log(x)
