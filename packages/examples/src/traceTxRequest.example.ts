import { TransactionTracer } from '@evm-transaction-trace/tracer'
import { type Address, erc20Abi, type PublicClient } from 'viem'
import { getUnlimitedBalanceAndApprovalStateOverrides } from '../../tracer/src/token-slot-override'
import { hyperBrickFactoryAbi } from './abi/HyperBrickFactory.abi'
import { HyperBrickPairABI } from './abi/HyperBrickPair.abi'
import { LBRouterAbi } from './abi/LBRouterabi'
import { OBExecutorAbi } from './abi/obExecutorAbi'
import { RouterAbi } from './abi/routerabi'
import { getPublicClient } from './client'
import { ETHERSCAN_API_KEY, RPC_URL } from './config'
import { ERC20A, EXECUTOR, LBRouter, ROUTER } from './constants'

const client = getPublicClient(RPC_URL) as PublicClient
export const TOKEN = '0x9FDBdA0A5e284c32744D2f17Ee5c74B284993463'
const SENDER: Address = '0xc91E7af2E874A2e04183908AdD8b5c3bDb515CFC'

const tracer = new TransactionTracer(client, {
  cachePath: `./tx-cache-dir`,
  cacheOptions: {
    etherscanApiKey: ETHERSCAN_API_KEY,
    byAddress: {
      [ROUTER]: RouterAbi,
      [LBRouter]: LBRouterAbi,
      [EXECUTOR]: OBExecutorAbi,
      [ERC20A]: erc20Abi,
    },
    extraAbis: [
      RouterAbi,
      erc20Abi,
      OBExecutorAbi,
      LBRouterAbi,
      HyperBrickPairABI,
      hyperBrickFactoryAbi,
    ],
  },
})

await tracer.init()

const trace = await tracer.traceCall({
  account: SENDER,
  blockTag: 'latest',
  to: ROUTER,
  data: '0xd46cadbc0000000000000000000000009fdbda0a5e284c32744d2f17ee5c74b2849934630000000000000000000000000000000000000000000000000000000000989680000000000000000000000000555555555555555555555555555555555555555500000000000000000000000000000000000000000000000e56421da4ca55000000000000000000000000000000000000000000000000000e529687991b069439000000000000000000000000c91e7af2e874a2e04183908add8b5c3bdb515cfc000000000000000000000000000000000000000000000000000000000000012000000000000000000000000007b93b6766a40df8c96440dc55708ca997229872000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000001de555555555555555555555555555555555555555500000000000000000000000000000000000000000000000000000e56421da4ca55000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000019FDBdA0A5e284c32744D2f17Ee5c74B28499346305022201BBCF8523811060E1c112a8459284a48a4B17661F0007B93B6766A40Df8C96440DC55708ca99722987206740125ED8E68f71F60dCF3B730090a313c0A6f30025C0007B93B6766A40Df8C96440DC55708ca997229872069f016082F74559ef3A2acAEAa949C1a17E5aAdc4cD450107B93B6766A40Df8C96440DC55708ca997229872268301f6E10d4Bf5706FD25e2460ad61A35e5568C2f3030107B93B6766A40Df8C96440DC55708ca997229872ffff01467364bd2a633208b4534f5b7eC11d24604546e40107B93B6766A40Df8C96440DC55708ca99722987201fD739d4e423301CE9385c1fb8850539D657C296D01ffff264044e34336e41B9653931C4E0717587837993cA2555555555555555555555555555555555555555507B93B6766A40Df8C96440DC55708ca99722987200000000000000000000000000000000000000000000000000000000000000010000',
  tracer: 'callTracer',
  chain: client.chain,
  tracerConfig: { withLog: true },
  stateOverride: getUnlimitedBalanceAndApprovalStateOverrides(
    SENDER,
    TOKEN,
    ROUTER,
  ),
})
// "reserve0": "13097228",
// "reserve1": "881653096920182452748",
console.log(trace)
